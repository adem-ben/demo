javascript
// Using Express.js to create a simple API
const express = require('express');
const axios = require('axios');
const app = express();

app.use(express.json());

// Endpoint to check balance in Pi Network
app.get('/check-balance', async (req, res) => {
  try {
    const piResponse = await axios.get('https://api.pi.network/user/balance', {
      headers: { 'Authorization': `Bearer ${req.headers.authorization}` }
    });
    res.json(piResponse.data);
  } catch (error) {
    res.status(500).json({ error: 'Failed to fetch balance' });
  }
});

// Endpoint to perform a buy/sell transaction on a trading platform
app.post('/trade', async (req, res) => {
  const { amount, currency } = req.body;
  try {
    const tradeResponse = await axios.post('https://api.exchange.com/trade', {
      amount,
      currency
    }, {
      headers: { 'Authorization': `Bearer ${req.headers.authorization}` }
    });
    res.json(tradeResponse.data);
  } catch (error) {
    res.status(500).json({ error: 'Failed to execute trade' });
  }
});

// Endpoint to perform a withdrawal through a payment system
app.post('/withdraw', async (req, res) => {
  const { amount, paymentMethod } = req.body;
  try {
    const withdrawResponse = await axios.post('https://api.payment.com/withdraw', {
      amount,
      paymentMethod
    }, {
      headers: { 'Authorization': `Bearer ${req.headers.authorization}` }
    });
    res.json(withdrawResponse.data);
  } catch (error) {
    res.status(500).json({ error: 'Failed to process withdrawal' });
  }
});

// Running the server on port 3000
app.listen(3000, () => {
  console.log('Server running on port 3000');
});
```
